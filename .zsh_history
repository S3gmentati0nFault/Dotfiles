cat .zcompdump-Alessandroâ€ƒ¹s\ MacBook\ Pro-5.8.1
lolcat
clear
cd $ZDOTDIR
L
l
cd
l
l $ZDOTDIR
zshrc
aliases
zsh
dots
zshr
zshrc
aliases
zsh
dots
l
cd
l
rm -dr .zsh_sessions .zcompdump-Alessandroâ€ƒ¹s\ MacBook\ Pro-5.8.1 .zcompdump-Alessandroâ€ƒ¹s\ MacBook\ Pro-5.9 .zsh_history .zshrc
l
zsh
l
nvim .vimrc
ranger .vim
ranger
ranger -a
ranger --help
sudo ranger
ranger
l .config
cd .config
l
rm -dr neofetch
l
l nvim
nvim nvim/init.vim
l
..
l
nvim vim
nvim .vim
nvim .vimrc
mv .config/nvim/* /Users/heartofgold/Projects/.files
l $ZDOTDIR
Lq
\:q
zsh
nvim .vimrc
zshrc
mv .vimrc $ZDOTDIR
l
zsh
l
nvim .vim
mv .vim $ZDOTDIR
L
l
l .config
l .config/nvim
rm -d .config/nvim
;
l
nvim package-lock.json
zshrc
dots
l
nvim init.vim
mv ~/.config/coc/* ./coc
mkdir coc
mv ~/.config/coc/* ./coc
l coc
..
cd .files
zshrc
zsh
zshrc
l
dots
ranger
l
cd .vim
l
cd aitp
l autoload
l bundle
//
dots
l
cd autoload
;
l
nvim plug.vim
..l
..
l
nvim .vimrc
nvim int
nvim init
nvim init.vim
l
git add *
git status
\:q
git restore --staged *
l
git status
nvim .gitignore
l
touch .gitignore
l coc
nvim .gitignore
add .gitignore
git add .gitignore
git commit -m ".gitignore file"
git push
git pull
git add *
git status
git add .zshrc .vimrc .vim
git status
git restore --staged *
git status
git restore --staged .vim
git status
nvim .git
nvim .gitignore
git add .gitignore
git commit -m ".gitignore modifications + first config files\
"
git push
git status
git pull
git add .vim
git status
git commit -m ".vim folder"
git push
l
cd Projects
pullAll
git status random-utilities
cd random-utilities
git status
cat bash/utilities.sh
gitadd "Functions in macbook"
git pull --ff
git pull -r
git merge
cd Projects/.files
l
git pull
zsh
l
zshrc
zsh
zsh
zsh
szh
zsh
zsh
if test(${setxbmap -help}) then echo si\
end
if test(${setxbmap -help}) then: echo si\
end
if test(${setxbmap -help}) then echo si\
fi
if test(${setxbmap -help}) then echo si fi\

if [[setxbmap -help]] then echo si fi
if [[setxbmap -help]] then echo "si" f\
i
if [[setxbmap -help]] then echo "si" fi
if [[setxbmap -help]]then echo "si" fi\

if [[setxbmap -help]] then echo "si" fi\

if [[ setxbmap -help ]] then echo "si" fi\

if [[ $(setxbmap -help) ]] then echo "si" fi\
\

if [[ $(setxbmap -help) ]] then echo "si" fi
if [[ $(setxbmap -help) ]] then\
echo si\
fi
zshrc
zsh
zshrc
zsh
zshrc
zsh
zsh
zsh
szh
zsh
zsh
if test(${setxbmap -help}) then echo si\
end
if test(${setxbmap -help}) then: echo si\
end
if test(${setxbmap -help}) then echo si\
fi
if test(${setxbmap -help}) then echo si fi\

if [[setxbmap -help]] then echo si fi
if [[setxbmap -help]] then echo "si" f\
i
if [[setxbmap -help]] then echo "si" fi
if [[setxbmap -help]]then echo "si" fi\

if [[setxbmap -help]] then echo "si" fi\

if [[ setxbmap -help ]] then echo "si" fi\

if [[ $(setxbmap -help) ]] then echo "si" fi\
\

if [[ $(setxbmap -help) ]] then echo "si" fi
if [[ $(setxbmap -help) ]] then\
echo si\
fi
zshrc
zsh
zshrc
zsh
zshrc
zsh
zsh
zsh
szh
zsh
zsh
if test(${setxbmap -help}) then echo si\
end
if test(${setxbmap -help}) then: echo si\
end
if test(${setxbmap -help}) then echo si\
fi
if test(${setxbmap -help}) then echo si fi\

if [[setxbmap -help]] then echo si fi
if [[setxbmap -help]] then echo "si" f\
i
if [[setxbmap -help]] then echo "si" fi
if [[setxbmap -help]]then echo "si" fi\

if [[setxbmap -help]] then echo "si" fi\

if [[ setxbmap -help ]] then echo "si" fi\

if [[ $(setxbmap -help) ]] then echo "si" fi\
\

if [[ $(setxbmap -help) ]] then echo "si" fi
if [[ $(setxbmap -help) ]] then\
echo si\
fi
zshrc
zsh
zshrc
zsh
zshrc
zsh
zsh
zsh
szh
zsh
zsh
if test(${setxbmap -help}) then echo si\
end
if test(${setxbmap -help}) then: echo si\
end
if test(${setxbmap -help}) then echo si\
fi
if test(${setxbmap -help}) then echo si fi\

if [[setxbmap -help]] then echo si fi
if [[setxbmap -help]] then echo "si" f\
i
if [[setxbmap -help]] then echo "si" fi
if [[setxbmap -help]]then echo "si" fi\

if [[setxbmap -help]] then echo "si" fi\

if [[ setxbmap -help ]] then echo "si" fi\

if [[ $(setxbmap -help) ]] then echo "si" fi\
\

if [[ $(setxbmap -help) ]] then echo "si" fi
if [[ $(setxbmap -help) ]] then\
echo si\
fi
zshrc
zsh
zshrc
zsh
zshrc
zsh
zsh
zsh
szh
zsh
zsh
if test(${setxbmap -help}) then echo si\
end
if test(${setxbmap -help}) then: echo si\
end
if test(${setxbmap -help}) then echo si\
fi
if test(${setxbmap -help}) then echo si fi\

if [[setxbmap -help]] then echo si fi
if [[setxbmap -help]] then echo "si" f\
i
if [[setxbmap -help]] then echo "si" fi
if [[setxbmap -help]]then echo "si" fi\

if [[setxbmap -help]] then echo "si" fi\

if [[ setxbmap -help ]] then echo "si" fi\

if [[ $(setxbmap -help) ]] then echo "si" fi\
\

if [[ $(setxbmap -help) ]] then echo "si" fi
if [[ $(setxbmap -help) ]] then\
echo si\
fi
zshrc
zsh
zshrc
zsh
l
zshrc
which setxkbmap
which cat
if [ which cat ] then echo "si" fi\

if [ which cat ] then echo "si" end
test which cat
if [ which cat ] then echo "si" fi
if (( which cat )) then echo "si" fi\

nvim prova.sh
bash prova.sh
nvim prova.sh
bash prova.sh
nvim p
nvim prova.sh
bash prova.sh
nvim prova.sh
cat prova.sh
nvim prova.sh
bash prova.sh
quad()
quad
l
bash prova.sh quad
nvim prova.sh
bash prova.sh quad
nvim prova.sh
bash prova.sh quad
nvim prova.sh
bash prova.sh quad
zshrc
zsh
nvim .zshrc
zshrc
zsh
zshrc
zsh
zsh
l
zshrc
whereis oh-my-zsh
l
ls -la
where .oh-my-zsh
l
zshrc
..
ls -la
cd heartofgold
l
ls -la
cd .config
ls -la
ranger
navi
navi
zshrc
zsh
zshrc
zsh
zshrc
zsh
zsh
zshrc
nvim prova.sh
round
pro
./prova.sh
bash prova.sh
cat prova.sh
nvim prova.sh
cat prova.sh
bash prova.sh
cat prova.sh
zshrc
zsh
l
zshrc
which setxkbmap
which cat
if [ which cat ] then echo "si" fi\

if [ which cat ] then echo "si" end
test which cat
if [ which cat ] then echo "si" fi
if (( which cat )) then echo "si" fi\

nvim prova.sh
bash prova.sh
nvim prova.sh
bash prova.sh
nvim p
nvim prova.sh
bash prova.sh
nvim prova.sh
cat prova.sh
nvim prova.sh
bash prova.sh
quad()
quad
l
bash prova.sh quad
nvim prova.sh
bash prova.sh quad
nvim prova.sh
bash prova.sh quad
nvim prova.sh
bash prova.sh quad
zshrc
zsh
nvim .zshrc
zshrc
zsh
zshrc
zsh
zsh
l
zshrc
whereis oh-my-zsh
l
ls -la
where .oh-my-zsh
l
zshrc
..
ls -la
cd heartofgold
l
ls -la
cd .config
ls -la
ranger
navi
navi
zshrc
zsh
zshrc
zsh
zshrc
zsh
zsh
zshrc
nvim prova.sh
round
pro
./prova.sh
bash prova.sh
cat prova.sh
nvim prova.sh
cat prova.sh
bash prova.sh
cat prova.sh
zshrc
zsh
l
zshrc
which setxkbmap
which cat
if [ which cat ] then echo "si" fi\

if [ which cat ] then echo "si" end
test which cat
if [ which cat ] then echo "si" fi
if (( which cat )) then echo "si" fi\

nvim prova.sh
bash prova.sh
nvim prova.sh
bash prova.sh
nvim p
nvim prova.sh
bash prova.sh
nvim prova.sh
cat prova.sh
nvim prova.sh
bash prova.sh
quad()
quad
l
bash prova.sh quad
nvim prova.sh
bash prova.sh quad
nvim prova.sh
bash prova.sh quad
nvim prova.sh
bash prova.sh quad
zshrc
zsh
nvim .zshrc
zshrc
zsh
zshrc
zsh
zsh
l
zshrc
whereis oh-my-zsh
l
ls -la
where .oh-my-zsh
l
zshrc
..
ls -la
cd heartofgold
l
ls -la
cd .config
ls -la
ranger
navi
navi
zshrc
zsh
zshrc
zsh
zshrc
zsh
zsh
zshrc
nvim prova.sh
round
pro
./prova.sh
bash prova.sh
cat prova.sh
nvim prova.sh
cat prova.sh
bash prova.sh
cat prova.sh
zshrc
zsh
l
zshrc
which setxkbmap
which cat
if [ which cat ] then echo "si" fi\

if [ which cat ] then echo "si" end
test which cat
if [ which cat ] then echo "si" fi
if (( which cat )) then echo "si" fi\

nvim prova.sh
bash prova.sh
nvim prova.sh
bash prova.sh
nvim p
nvim prova.sh
bash prova.sh
nvim prova.sh
cat prova.sh
nvim prova.sh
bash prova.sh
quad()
quad
l
bash prova.sh quad
nvim prova.sh
bash prova.sh quad
nvim prova.sh
bash prova.sh quad
nvim prova.sh
bash prova.sh quad
zshrc
zsh
nvim .zshrc
zshrc
zsh
zshrc
zsh
zsh
l
zshrc
whereis oh-my-zsh
l
ls -la
where .oh-my-zsh
l
zshrc
..
ls -la
cd heartofgold
l
ls -la
cd .config
ls -la
ranger
navi
navi
zshrc
zsh
zshrc
zsh
zshrc
zsh
zsh
zshrc
nvim prova.sh
round
pro
./prova.sh
bash prova.sh
cat prova.sh
nvim prova.sh
cat prova.sh
bash prova.sh
cat prova.sh
zshrc
zsh
nvim prova.sh
zshrc
zsh
l
zshrc
which setxkbmap
which cat
if [ which cat ] then echo "si" fi\

if [ which cat ] then echo "si" end
test which cat
if [ which cat ] then echo "si" fi
if (( which cat )) then echo "si" fi\

nvim prova.sh
bash prova.sh
nvim prova.sh
bash prova.sh
nvim p
nvim prova.sh
bash prova.sh
nvim prova.sh
cat prova.sh
nvim prova.sh
bash prova.sh
quad()
quad
l
bash prova.sh quad
nvim prova.sh
bash prova.sh quad
nvim prova.sh
bash prova.sh quad
nvim prova.sh
bash prova.sh quad
zshrc
zsh
nvim .zshrc
zshrc
zsh
zshrc
zsh
zsh
l
zshrc
whereis oh-my-zsh
l
ls -la
where .oh-my-zsh
l
zshrc
..
ls -la
cd heartofgold
l
ls -la
cd .config
ls -la
ranger
navi
navi
zshrc
zsh
zshrc
zsh
zshrc
zsh
zsh
zshrc
nvim prova.sh
round
pro
./prova.sh
bash prova.sh
cat prova.sh
nvim prova.sh
cat prova.sh
bash prova.sh
cat prova.sh
zshrc
zsh
nvim prova.sh
zshrc
zsh
l
zshrc
which setxkbmap
which cat
if [ which cat ] then echo "si" fi\

if [ which cat ] then echo "si" end
test which cat
if [ which cat ] then echo "si" fi
if (( which cat )) then echo "si" fi\

nvim prova.sh
bash prova.sh
nvim prova.sh
bash prova.sh
nvim p
nvim prova.sh
bash prova.sh
nvim prova.sh
cat prova.sh
nvim prova.sh
bash prova.sh
quad()
quad
l
bash prova.sh quad
nvim prova.sh
bash prova.sh quad
nvim prova.sh
bash prova.sh quad
nvim prova.sh
bash prova.sh quad
zshrc
zsh
nvim .zshrc
zshrc
zsh
zshrc
zsh
zsh
l
zshrc
whereis oh-my-zsh
l
ls -la
where .oh-my-zsh
l
zshrc
..
ls -la
cd heartofgold
l
ls -la
cd .config
ls -la
ranger
navi
navi
zshrc
zsh
zshrc
zsh
zshrc
zsh
zsh
zshrc
nvim prova.sh
round
pro
./prova.sh
bash prova.sh
cat prova.sh
nvim prova.sh
cat prova.sh
bash prova.sh
cat prova.sh
zshrc
zsh
nvim prova.sh
zshrc
zsh
nvim prova.sh
bash prova.sh
cd $ZDOTDIR
which setxkbmap
cd
which setxkbmap
cat prova.sh
cat $ZDOTDIR/.zshrc
zsh
l
zshrc
which setxkbmap
which cat
if [ which cat ] then echo "si" fi\

if [ which cat ] then echo "si" end
test which cat
if [ which cat ] then echo "si" fi
if (( which cat )) then echo "si" fi\

nvim prova.sh
bash prova.sh
nvim prova.sh
bash prova.sh
nvim p
nvim prova.sh
bash prova.sh
nvim prova.sh
cat prova.sh
nvim prova.sh
bash prova.sh
quad()
quad
l
bash prova.sh quad
nvim prova.sh
bash prova.sh quad
nvim prova.sh
bash prova.sh quad
nvim prova.sh
bash prova.sh quad
zshrc
zsh
nvim .zshrc
zshrc
zsh
zshrc
zsh
zsh
l
zshrc
whereis oh-my-zsh
l
ls -la
where .oh-my-zsh
l
zshrc
..
ls -la
cd heartofgold
l
ls -la
cd .config
ls -la
ranger
navi
navi
zshrc
zsh
zshrc
zsh
zshrc
zsh
zsh
zshrc
nvim prova.sh
round
pro
./prova.sh
bash prova.sh
cat prova.sh
nvim prova.sh
cat prova.sh
bash prova.sh
cat prova.sh
zshrc
zsh
nvim prova.sh
zshrc
zsh
nvim prova.sh
bash prova.sh
cd $ZDOTDIR
which setxkbmap
cd
which setxkbmap
cat prova.sh
cat $ZDOTDIR/.zshrc
zsh
zshrc
zsh
l
zshrc
which setxkbmap
which cat
if [ which cat ] then echo "si" fi\

if [ which cat ] then echo "si" end
test which cat
if [ which cat ] then echo "si" fi
if (( which cat )) then echo "si" fi\

nvim prova.sh
bash prova.sh
nvim prova.sh
bash prova.sh
nvim p
nvim prova.sh
bash prova.sh
nvim prova.sh
cat prova.sh
nvim prova.sh
bash prova.sh
quad()
quad
l
bash prova.sh quad
nvim prova.sh
bash prova.sh quad
nvim prova.sh
bash prova.sh quad
nvim prova.sh
bash prova.sh quad
zshrc
zsh
nvim .zshrc
zshrc
zsh
zshrc
zsh
zsh
l
zshrc
whereis oh-my-zsh
l
ls -la
where .oh-my-zsh
l
zshrc
..
ls -la
cd heartofgold
l
ls -la
cd .config
ls -la
ranger
navi
navi
zshrc
zsh
zshrc
zsh
zshrc
zsh
zsh
zshrc
nvim prova.sh
round
pro
./prova.sh
bash prova.sh
cat prova.sh
nvim prova.sh
cat prova.sh
bash prova.sh
cat prova.sh
zshrc
zsh
nvim prova.sh
zshrc
zsh
nvim prova.sh
bash prova.sh
cd $ZDOTDIR
which setxkbmap
cd
which setxkbmap
cat prova.sh
cat $ZDOTDIR/.zshrc
zsh
zshrc
zsh
l
zsh
brew isntall zsh-autosuggestions
brew install zsh-autosuggestions
brew install zsh-syntax-highlighting
zsh
brew install zsh-completions
zshrc
cd .oh-my-zsh
l
cd plugins
l
whereis zsh-syntax-highlighting
where zsh-syntax-highlighting
which zsh-syntax-highlighting
cd
cd /usr/local/Homebrew
l
cd Library
l
..
l
..
l
cd Caskroom
l
..
cd Cellar
l
which homebrew
which Homebrew
whereis Homebrew
cd
brew info
brew -help
brew -h
zsh
zshrc
zsh
zshrc
zsh
cd /usr/local/Homebrew
l
..
cd Cellar
l
cd zsh-autosuggestions
l
cd 0Â§
cd 0.7.0
l
cd share
l
cd zsh-autosuggestions
l
cd
dots
l
mkdir plugins
l
brew install zsh-syntax-highlighting $ZDOTDIR
brew install zsh-syntax-highlighting --prefix=$ZDOTDIR
zshrc
cd $ZDOTDIR
l
ls -la
nvim imports.sh
cd $ZSH
cd
l
ls -la
\
\
sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"\

: 1684340073:0;zshrc
: 1684340119:0;zsh
: 1684340131:0;rnd
: 1684340132:0;l
: 1684340134:0;cd bash
: 1684340135:0;l
: 1684340140:0;nvim uti
: 1684340144:0;nvim utilities.sh
: 1684340234:0;zsh
: 1684340246:0;cd $ZDOTDIR
: 1684340247:0;l
: 1684340275:0;nvim imports.sh
: 1684340305:0;git pull
: 1684340321:0;git status
: 1684340330:0;nvim imports.sh
: 1684340340:0;zsh
: 1684340342:0;zshrc
: 1684340389:0;brew uninstall zsh-syntax-highlighting
: 1684340438:0;brew uninstall zsh-autosuggestions zsh-completions
: 1684340454:0;zshrc
: 1684340476:0;zsh
: 1684340480:0;zshrc
: 1684340490:0;zsh
: 1684340503:0;brew install zsh-syntax-highlighting
: 1684340518:0;zshrc
: 1684340536:0;zsh
: 1684340642:0;zshrc
: 1684340657:0;cd $HOME/.oh-my-zsh
: 1684340658:0;l
: 1684340660:0;cd plugins
: 1684340660:0;l
: 1684340671:0;cd
: 1684340693:0;brew uninstall zsh-syntax-highlighting
: 1684340738:0;brew install zsh-syntax-highlighting --prefix=~/.oh-my-zsh/plugins
: 1684340752:0;l .oh-my-zsh
: 1684340758:0;l .oh-my-zsh/custom
: 1684340762:0;l .oh-my-zsh/custom/plugins
: 1684340999:0;brew install zsh-syntax-highlighting
: 1684341041:0;aliases
: 1684341070:0;l
: 1684341091:0;mv $ZDOTDIR/imports.sh $ZDOTDIR/imports
: 1684341102:0;zsh
: 1684341107:0;imports
: 1684341119:0;zsh
: 1684341129:0;zshrc
: 1684341179:0;zsh
: 1684341216:0;brew install zsh-autosuggestions
: 1684341235:0;imports
: 1684341255:0;zsh
: 1684341430:0;nvim
: 1684341522:0;l
: 1684341531:0;cat .zshrc
: 1684341551:0;rm .zshrc
: 1684341553:0;l
: 1684341555:0;zsh
: 1684341556:0;l
: 1684341723:0;nvim
: 1684341755:0;cd $ZDOTDIR
: 1684341757:0;l
: 1684341762:0;cd coc
: 1684341762:0;l
: 1684341770:0;cat memos.json
: 1684341775:0;cd extensions
: 1684341775:0;l
: 1684341780:0;cat package.json
: 1684341784:0;l coc-j
: 1684341787:0;l coc-java-data
: 1684341791:0;..
: 1684341792:0;l
: 1684341793:0;..
: 1684341793:0;l
: 1684341806:0;l init.vim
: 1684341809:0;cat init.vim
: 1684341837:0;cat vimrc
: 1684341841:0;cat .vimrc
: 1684341866:0;l
: 1684341876:0;ranger
: 1684341883:0;cd .vim
: 1684341884:0;l
: 1684341888:0;cd autoload
: 1684341889:0;l
: 1684341891:0;..
: 1684341893:0;cd bundle
: 1684341893:0;l
: 1684341895:0;..
: 1684341897:0;l
: 1684341899:0;..
: 1684341900:0;l
: 1684341971:0;nvim init.vim
: 1684341996:0;nvim
: 1684342001:0;zshrc
: 1684342042:0;cd
: 1684342042:0;l
: 1684342053:0;dots
: 1684342054:0;l
: 1684342060:0;dots
: 1684342060:0;l
: 1684342064:0;nvim
: 1684342126:0;zshrc
: 1684342132:0;dots
: 1684342132:0;l
: 1684342136:0;nvim init.vim
: 1684342143:0;.vimrc
: 1684342148:0;nvim .vimrc
: 1684342175:0;nvim
: 1684342320:0;nvim .vimrc
: 1684342350:0;nvim
: 1684397048:0;l
: 1684397051:0;cd Downloads
: 1684397052:0;l
: 1684397055:0;open .
: 1684484544:0;zshrc
: 1684484563:0;zsh
: 1684484579:0;cd $ZDOTDIR
: 1684484580:0;l
: 1684484583:0;git status
: 1684484590:0;git add .
: 1684484592:0;git status
: 1684484603:0;git restore --staged *
: 1684484606:0;git status
: 1684484615:0;git restore --staged *
: 1684484629:0;git status
: 1684484650:0;git restore --staged .zsh_sessions/*
: 1684484653:0;git status
: 1684484663:0;nvim .gitignore
: 1684484697:0;git add .gitignore
: 1684484709:0;git commit -m "Added some details"
: 1684484711:0;git push
: 1684484715:0;git pull
: 1684484719:0;l
: 1684484721:0;git status
: 1684484726:0;git add *
: 1684484729:0;git status
: 1684484734:0;l
: 1684484781:0;cd
: 1684484782:0;l
: 1684484785:0;cd Documents
: 1684484786:0;l
: 1684484789:0;cd Manuali
: 1684484789:0;l
: 1684484793:0;open Pro\ git.pdf
: 1684485501:0;cd
: 1684485501:0;l
: 1684485546:0;cd
: 1684485549:0;l
: 1684485561:0;grn
: 1684485562:0;l
: 1684485604:0;mkdir project_assignement
: 1684485615:0;open project Project\ DPS\ 2023\ -\ Greenfield.pdf
: 1684485623:0;open Project\ DPS\ 2023\ -\ Greenfield.pdf
: 1684485701:0;mv Project\ DPS\ 2023\ -\ Greenfield.pdf project_assignement/Greendield_0.pdf
: 1684485736:0;cd Downloads
: 1684485738:0;cd
: 1684485740:0;cd Downloads
: 1684485741:0;l
: 1684485747:0;unzip Simulators\ Code\ DPS\ 2023.zip
: 1684485750:0;l
: 1684485756:0;cd Simulators\ Code\ DPS\ 2023
: 1684485757:0;l
: 1684485773:0;..
: 1684485807:0;mv Simulators\ Code\ DPS\ 2023.zip ~/Projects/Greenfield/src/main/java/
: 1684485808:0;l
: 1684485810:0;cd
: 1684485819:0;cd src/main/java
: 1684485820:0;l
: 1684485822:0;unzip Simulators\ Code\ DPS\ 2023.zip
: 1684485824:0;l
: 1684485827:0;rm Simulators\ Code\ DPS\ 2023.zip
: 1684485828:0;l
: 1684485837:0;cat Simulators\ Code\ DPS\ 2023/Buffer.java
: 1684485853:0;cd
: 1684485854:0;l
: 1684485855:0;grn
: 1684485856:0;l
: 1684485858:0;git status
: 1684485862:0;git add *
: 1684485864:0;git status
: 1684485892:0;mv ~/Downloads/Greenfield_1.pdf ./project_assignement
: 1684485896:0;git status
: 1684485898:0;git add *
: 1684485903:0;git status
: 1684485916:0;git rm Project\ DPS\ 2023\ -\ Greenfield.pdf
: 1684485919:0;git status
: 1684485942:0;git commit -m "Modification in project assignement, added simulation code"
: 1684485944:0;git push
: 1684499756:0;l
: 1684499931:0;l Chapters
: 1684499945:0;rm -d Chapters
: 1684499950:0;rm -dr Chapters
: 1684499955:0;l
: 1684499958:0;rm chapters.tex
: 1684499959:0;l
: 1684499962:0;rm Bibliography.bib
: 1684499963:0;l
: 1684499967:0;rm logo_unimib.pdf
: 1684499969:0;l
: 1684499971:0;rm main.tex
: 1684499976:0;rm prova.sh 
: 1684499978:0;l
: 1684500035:0;zsh
: 1684500037:0;fish
: 1684500043:0;brew info fish
: 1684500110:0;brew install fish
: 1684500517:0;fish
: 1684501979:0;l
: 1684501981:0;cd
: 1684501981:0;l
: 1684501984:0;fish
: 1684502305:0;cd $ZDOTDIR
: 1684502307:0;l
: 1684590152:0;ls
: 1684590183:0;source $ZDOTDIR/.zshrc
: 1684590192:0;aliases
: 1684590320:0;zsh
: 1684590333:0;aliases
: 1684590354:0;source $ZDOTDIR/.zshrc
: 1684590357:0;zsh
: 1684590364:0;aliases
: 1684590459:0;zsh
: 1684590467:0;alias
: 1684590469:0;aliases
: 1684590482:0;source $ZDOTDIR/.zshrc
: 1684590488:0;zsh
: 1684590510:0;cd Projects
: 1684590511:0;;
: 1684590512:0;l
: 1684590523:0;mv .files dotfiles
